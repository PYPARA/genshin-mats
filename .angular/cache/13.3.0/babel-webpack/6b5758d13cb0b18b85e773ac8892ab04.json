{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../_services/cookie-storage.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../_shared/loader/loader.component\";\n\nfunction UserDataComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" The website may use cookies to personalise content. Those cookies are saved on your device and will not be used for any other purpose than to retain saved information on this website. \");\n    i0.ɵɵelementStart(2, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function UserDataComponent_div_3_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.disclaimerSeen();\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction UserDataComponent_app_loader_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loader\");\n  }\n}\n\nexport let UserDataComponent = /*#__PURE__*/(() => {\n  class UserDataComponent {\n    constructor(cookieStorageService) {\n      this.cookieStorageService = cookieStorageService;\n      this.charactersChange = new EventEmitter();\n      this.alertSeen = \"false\";\n      this.characterString = \"\";\n      this.deleteTitle = \"\";\n      this.disableDelete = false;\n      this.showAlert = false;\n      this.alertMsg = \"\";\n      this.timeouts = null;\n      this.loading = false;\n      let alertSeen = this.cookieStorageService.get(\"disclaimer-seen\");\n      if (alertSeen == null || alertSeen == \"\") this.alertSeen = \"false\";else this.alertSeen = \"true\";\n      let userData = this.cookieStorageService.get(\"c\");\n\n      if (userData == null || userData == \"\") {\n        this.disableDelete = true;\n        this.deleteTitle = \"No data saved to browser\";\n      } else {\n        this.disableDelete = false;\n        this.deleteTitle = \"Deleted saved data from browser\";\n      }\n    }\n\n    ngOnChanges() {\n      this.loading = true;\n\n      if (this.characters == null) {\n        this.loading = false;\n        return;\n      }\n\n      this.characterString = JSON.stringify(this.characters.map(c => ({\n        name: c.name,\n        file: c.name.replace(/ \\([^)]*\\)/, \"\"),\n        level: c.level,\n        balevel: c.balevel,\n        eslevel: c.eslevel,\n        eblevel: c.eblevel,\n        ascension: c.ascension,\n        tlevel: c.tlevel,\n        tbalevel: c.tbalevel,\n        teslevel: c.teslevel,\n        teblevel: c.teblevel,\n        tascension: c.tascension,\n        display: c.display,\n        weaponMode: false,\n        weapon: {\n          name: c.weapon.name,\n          file: c.weapon.name,\n          rarity: c.weapon.rarity,\n          level: c.weapon.level,\n          ascension: c.weapon.ascension,\n          tlevel: c.weapon.tlevel,\n          tascension: c.weapon.tascension\n        }\n      })));\n      this.loading = false;\n    }\n    /**\r\n     * Sets the disclaimer as seen in the cookies so it doesn't display again\r\n     */\n\n\n    disclaimerSeen() {\n      this.cookieStorageService.set(\"disclaimer-seen\", \"true\");\n    }\n    /**\r\n     * Saves the text in the textarea to the cookies\r\n     */\n\n\n    save() {\n      this.loading = true;\n\n      try {\n        let toValidate = JSON.parse(this.characterString);\n        this.validateData(toValidate);\n      } catch (e) {\n        this.loading = false;\n        console.log(e);\n        this.alertMsg = e.message;\n        this.displayAlert();\n        return;\n      }\n\n      this.cookieStorageService.set(\"c\", this.characterString);\n      this.loading = false;\n      this.alertMsg = \"Character data saved!\";\n      this.disableDelete = false;\n      this.displayAlert();\n    }\n    /**\r\n     * Loads the text in the text area to the app\r\n     */\n\n\n    load() {\n      this.loading = true;\n\n      try {\n        let toValidate = JSON.parse(this.characterString);\n        this.validateData(toValidate);\n        this.characters = toValidate;\n      } catch (e) {\n        this.loading = false;\n        console.log(e);\n        this.alertMsg = \"Supplied data is an invalid JSON object and could not be loaded\";\n        this.displayAlert();\n        return;\n      }\n\n      this.loading = false;\n      this.alertMsg = \"Character data loaded!\";\n      this.displayAlert();\n      this.charactersChange.emit(this.characters);\n    }\n    /**\r\n     * Deletes saved cookies\r\n     */\n\n\n    delete() {\n      this.loading = true;\n      this.cookieStorageService.delete(\"c\");\n      this.cookieStorageService.delete(\"disclaimer-seen\");\n      this.loading = false;\n      this.disableDelete = true;\n      this.alertMsg = \"Character data deleted!\";\n      this.displayAlert();\n    }\n    /**\r\n     * Shows alert messages\r\n     */\n\n\n    displayAlert() {\n      this.showAlert = true;\n      if (this.timeouts != null) clearTimeout(this.timeouts);\n      this.timeouts = setTimeout(() => {\n        this.showAlert = false;\n      }, 5000);\n    }\n    /**\r\n     * Validates the object for characters\r\n     * @param data The object to be validated\r\n     */\n\n\n    validateData(data) {\n      for (let char of data) {\n        // Validate character name and file\n        let names = Object.getOwnPropertyNames(this.charData);\n        if (!names.includes(char.name) || !names.map(n => n.replace(/ \\([^)]+\\)/, \"\")).includes(char.file)) throw new Error(\"Invalid character or character file name:\\n\" + char.name + \"\\n\" + char.file); // Validate character levell\n\n        if (char.level < 1 || char.level > 90 || char.tlevel < char.level || char.tlevel > 90) throw new Error(\"Invalid character level for \" + char.name + \":\\nCurrent level: \" + char.level + \"\\nTarget level: \" + char.tlevel); // Validate character ascension\n\n        if (char.ascension < 0 || char.ascension > 6 || char.tascension < char.ascension || char.tascension > 6) throw new Error(\"Invalid character ascension for \" + char.name + \":\\nCurrent ascension: \" + char.ascension + \"\\nTarget ascension: \" + char.tascension); // Validate character normal attack\n\n        if (char.balevel < 1 || char.balevel > 10 || char.tbalevel < char.balevel || char.tbalevel > 10) throw new Error(\"Invalid normal attack level for \" + char.name + \":\\nCurrent level: \" + char.balevel + \"\\nTarget level: \" + char.tbalevel); // Validate character elemental skill\n\n        if (char.eslevel < 1 || char.eslevel > 10 || char.teslevel < char.eslevel || char.teslevel > 10) throw new Error(\"Invalid elemental skill level for \" + char.name + \":\\nCurrent level: \" + char.eslevel + \"\\nTarget level: \" + char.teslevel); // Validate character burst skill\n\n        if (char.eblevel < 1 || char.eblevel > 10 || char.teblevel < char.eblevel || char.teblevel > 10) throw new Error(\"Invalid elemental burst level for \" + char.name + \":\\nCurrent level: \" + char.eblevel + \"\\nTarget level: \" + char.teblevel); // Validate weapon name and file\n\n        names = Object.getOwnPropertyNames(this.weaponData);\n        if (!names.includes(char.weapon.name) || !names.includes(char.weapon.file)) throw new Error(\"Invalid weapon name or weapon file name for \" + char.name + \":\\n\" + char.weapon.name + \"\\n\" + char.weapon.file); // Validate if this character can equip this weapon\n\n        if (this.charData[char.name].weapon != this.weaponData[char.weapon.name].type) throw new Error(\"Invalid weapon for \" + char.name + \":\\n\" + char.weapon.name);\n        let weaponRarity = this.weaponData[char.weapon.name].rarity;\n        let maxAsc = weaponRarity < 3 ? 4 : 6;\n        let maxLevel = weaponRarity < 3 ? 70 : 90; // Validate weapon level\n\n        if (char.weapon.level < 1 || char.weapon.level > maxLevel || char.weapon.tlevel < char.weapon.level || char.weapon.tlevel > maxLevel) throw new Error(\"Invalid character level for \" + char.name + \":\\nCurrent level: \" + char.weapon.level + \"\\nTarget level: \" + char.weapon.tlevel); // Validate weapon ascension\n\n        if (char.weapon.ascension < 0 || char.weapon.ascension > maxAsc || char.weapon.tascension < char.weapon.ascension || char.weapon.tascension > maxAsc) throw new Error(\"Invalid character ascension for \" + char.name + \":\\nCurrent ascension: \" + char.weapon.ascension + \"\\nTarget ascension: \" + char.weapon.tascension);\n      }\n    }\n\n  }\n\n  UserDataComponent.ɵfac = function UserDataComponent_Factory(t) {\n    return new (t || UserDataComponent)(i0.ɵɵdirectiveInject(i1.CookieStorageService));\n  };\n\n  UserDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDataComponent,\n    selectors: [[\"app-user-data\"]],\n    inputs: {\n      characters: \"characters\",\n      charData: \"charData\",\n      weaponData: \"weaponData\",\n      change: \"change\"\n    },\n    outputs: {\n      charactersChange: \"charactersChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 23,\n    vars: 7,\n    consts: [[1, \"col-lg-12\"], [\"userData\", \"ngForm\"], [\"class\", \"alert alert-warning alert-dismissible show text-left\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"row\", \"text-left\"], [\"for\", \"characters\", 1, \"form-label\", \"px-0\"], [1, \"row\"], [\"id\", \"characters\", \"name\", \"characters\", \"rows\", \"8\", \"spellcheck\", \"false\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"characters\", \"ngModel\"], [1, \"text-left\", \"display-inherit\"], [\"title\", \"Save text to browser\", 1, \"btn\", \"ms-0\", \"default\", 3, \"click\"], [\"title\", \"Load text to characters\", 1, \"btn\", \"default\", 3, \"click\"], [1, \"btn\", \"danger\", 3, \"disabled\", \"title\", \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"fade\", \"show\", \"text-left\", \"float\", 3, \"ngClass\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn-close\"], [4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"alert-dismissible\", \"show\", \"text-left\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn-close\", 3, \"click\"]],\n    template: function UserDataComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", null, 1);\n        i0.ɵɵtemplate(3, UserDataComponent_div_3_Template, 3, 0, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Character Data\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"textarea\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UserDataComponent_Template_textarea_ngModelChange_8_listener($event) {\n          return ctx.characterString = $event;\n        });\n        i0.ɵɵtext(10, \"            \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"div\", 8)(13, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function UserDataComponent_Template_button_click_13_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(14, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function UserDataComponent_Template_button_click_15_listener() {\n          return ctx.load();\n        });\n        i0.ɵɵtext(16, \" Load \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function UserDataComponent_Template_button_click_17_listener() {\n          return ctx.delete();\n        });\n        i0.ɵɵtext(18, \" Delete saved data \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(19, \"div\", 12);\n        i0.ɵɵtext(20);\n        i0.ɵɵelement(21, \"button\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, UserDataComponent_app_loader_22_Template, 1, 0, \"app-loader\", 14);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.alertSeen === \"false\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.characterString);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"disabled\", ctx.disableDelete)(\"title\", ctx.deleteTitle);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.showAlert ? \"in\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.alertMsg, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm, i3.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgClass, i4.LoaderComponent],\n    styles: [\".row[_ngcontent-%COMP%]{--bs-gutter-x: 0}.btn[_ngcontent-%COMP%]{margin:10px;color:#fff}.display-contents[_ngcontent-%COMP%]{display:inherit}.default[_ngcontent-%COMP%]{background-color:#ffffff8c}.danger[_ngcontent-%COMP%]{background-color:#ff3434}.btn[disabled][_ngcontent-%COMP%]{pointer-events:all}.fade[_ngcontent-%COMP%]{opacity:0;transition:opacity .15s linear}.fade.in[_ngcontent-%COMP%]{opacity:1}.float[_ngcontent-%COMP%]{position:absolute;bottom:5px;right:5px}textarea[_ngcontent-%COMP%]{font-family:monospace}\"]\n  });\n  return UserDataComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}